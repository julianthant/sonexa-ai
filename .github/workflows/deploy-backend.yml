name: Deploy to Azure App Service

on:
  push:
    branches: [main]
    paths: ["backend/**"]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: sonexa-ai-backend
  AZURE_WEBAPP_PACKAGE_PATH: "./backend"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4

      - name: "Set up JDK 17"
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: "Cache Maven dependencies"
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: "Build with Maven"
        working-directory: ./backend
        run: mvn clean package -DskipTests

      - name: "Login to Azure Container Registry"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}

      - name: "Build and push Docker image"
        working-directory: ./backend
        run: |
          docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/sonexa-ai-backend:${{ github.sha }} .
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/sonexa-ai-backend:${{ github.sha }}

      - name: "Login to Azure"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Deploy to Azure App Service"
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          images: ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/sonexa-ai-backend:${{ github.sha }}

      - name: "Set App Service Configuration"
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az webapp config appsettings set \
              --name ${{ env.AZURE_WEBAPP_NAME }} \
              --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
              --settings \
                SPRING_PROFILES_ACTIVE=prod \
                AZURE_SPEECH_KEY="${{ secrets.AZURE_SPEECH_KEY }}" \
                AZURE_SPEECH_REGION="${{ secrets.AZURE_SPEECH_REGION }}" \
                AZURE_STORAGE_ACCOUNT_NAME="${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}" \
                AZURE_STORAGE_ACCOUNT_KEY="${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}" \
                AZURE_STORAGE_CONTAINER_NAME="${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}" \
                AZURE_KEYVAULT_URI="${{ secrets.AZURE_KEYVAULT_URI }}" \
                STRIPE_SECRET_KEY="${{ secrets.STRIPE_SECRET_KEY }}" \
                STRIPE_WEBHOOK_SECRET="${{ secrets.STRIPE_WEBHOOK_SECRET }}" \
                TESTMAIL_USERNAME="${{ secrets.TESTMAIL_USERNAME }}" \
                TESTMAIL_PASSWORD="${{ secrets.TESTMAIL_PASSWORD }}" \
                GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}" \
                GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}" \
                MICROSOFT_CLIENT_ID="${{ secrets.MICROSOFT_CLIENT_ID }}" \
                MICROSOFT_CLIENT_SECRET="${{ secrets.MICROSOFT_CLIENT_SECRET }}" \
                GITHUB_CLIENT_ID="${{ secrets.GITHUB_CLIENT_ID }}" \
                GITHUB_CLIENT_SECRET="${{ secrets.GITHUB_CLIENT_SECRET }}" \
                JWT_SECRET="${{ secrets.JWT_SECRET }}" \
                DATABASE_URL="${{ secrets.DATABASE_URL }}"
