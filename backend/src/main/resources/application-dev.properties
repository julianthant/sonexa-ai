spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# Enable H2 Console for development
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

server.port=8080

# AI Service Configuration
# Azure Speech Services Configuration
azure.speech.key=${AZURE_SPEECH_KEY}
azure.speech.region=${AZURE_SPEECH_REGION}
azure.speech.endpoint=https://${AZURE_SPEECH_REGION}.api.cognitive.microsoft.com

# Azure AI Configuration (for free tier)
azure.ai.key=${AZURE_AI_KEY}
azure.ai.endpoint=${AZURE_AI_ENDPOINT}
azure.ai.deployment.name=${AZURE_AI_DEPLOYMENT_NAME:gpt-35-turbo}

# Azure Storage Configuration
azure.storage.account-name=${AZURE_STORAGE_ACCOUNT_NAME}
azure.storage.account-key=${AZURE_STORAGE_ACCOUNT_KEY}
azure.storage.blob.container-name=${AZURE_STORAGE_CONTAINER_NAME:voice-files}

# Azure Key Vault Configuration
azure.keyvault.uri=${AZURE_KEYVAULT_URI}

# Stripe Configuration
stripe.api.key=${STRIPE_SECRET_KEY}
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET}

# Email Configuration (testmail.app)
spring.mail.host=mail.testmail.app
spring.mail.port=587
spring.mail.username=${TESTMAIL_USERNAME}
spring.mail.password=${TESTMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# JWT Configuration
jwt.secret=${JWT_SECRET:sonexa-ai-secret-key-change-in-production}
jwt.expiration=86400000

# GitHub OAuth Configuration (if using GitHub integration)
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}

# Google OAuth Configuration (for Gmail integration)
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email,https://www.googleapis.com/auth/gmail.modify

# Microsoft OAuth Configuration (for Outlook integration)
spring.security.oauth2.client.registration.microsoft.client-id=${MICROSOFT_CLIENT_ID}
spring.security.oauth2.client.registration.microsoft.client-secret=${MICROSOFT_CLIENT_SECRET}
spring.security.oauth2.client.registration.microsoft.scope=openid,profile,email,https://graph.microsoft.com/mail.readwrite
